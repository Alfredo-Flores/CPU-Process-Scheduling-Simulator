/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package process.scheduling.simulator.view;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import process.scheduling.simulator.ProcessObj;
import process.scheduling.simulator.fcfs.FirstComeFirstServe;
import process.scheduling.simulator.roundRobin.RoundRobin;
import process.scheduling.simulator.sjf.ShortestJobFirst;

public class Starter extends javax.swing.JFrame {

    /**
     * Creates new form Starter
     */
    public Starter() {
        initComponents();
        DefaultTableModel mdl = (DefaultTableModel) tblListaProcesos.getModel();
            mdl.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtInstanteLlegada = new javax.swing.JTextField();
        txtTiempoEspera = new javax.swing.JTextField();
        btnCrearProceso = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnSJF = new javax.swing.JButton();
        btnRoundRobin = new javax.swing.JButton();
        btnFCFS = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListaProcesos = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        btnLimpiarTabla = new javax.swing.JButton();
        txtQuantums = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListaCompletados = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblPromedioServicio = new javax.swing.JLabel();
        lblPromedioEspera = new javax.swing.JLabel();
        txtPromedioServicio = new javax.swing.JTextField();
        txtPromedioEspera = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador");

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jLabel1.setText("Simulador de CPU");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Crear proceso");

        jLabel3.setText("ID del proceso");

        jLabel4.setText("Nombre del proceso");

        jLabel5.setText("Instante de llegada");

        jLabel6.setText("Tiempo de ejecucion");


        btnCrearProceso.setText("Crear proceso");
        btnCrearProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearProcesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID)
                            .addComponent(txtNombre)
                            .addComponent(txtInstanteLlegada)
                            .addComponent(txtTiempoEspera, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(btnCrearProceso)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtInstanteLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTiempoEspera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCrearProceso)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSJF.setText("Shortest job first");
        btnSJF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSJFActionPerformed(evt);
            }
        });

        btnRoundRobin.setText("Round robin");
        btnRoundRobin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrRoundRobinActionPerformed(evt);
            }
        });

        btnFCFS.setText("First come first serve");
        btnFCFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFCFSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSJF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRoundRobin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFCFS, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, btnFCFS, btnRoundRobin, btnSJF);

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSJF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRoundRobin)
                        .addComponent(btnFCFS, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnFCFS, btnRoundRobin, btnSJF});

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblListaProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Instante de llegada", "Tiempo de ejecucion"
            }
        ));
        jScrollPane1.setViewportView(tblListaProcesos);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Procesos");

        btnLimpiarTabla.setText("Limpiar Tabla");
        btnLimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarTablaActionPerformed(evt);
            }
        });


        jLabel11.setText("Tiempo en Quantums:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(txtQuantums, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(btnLimpiarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLimpiarTabla)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuantums)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblListaCompletados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Instante de llegada", "Tiempo de ejecucion", "Instante de fin", "Tiempo de espera", "Tiempo de Servicio"
            }
        ));
        jScrollPane2.setViewportView(tblListaCompletados);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Promedio de tiempo de servicio    :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Promedio de tiempo de espera    :");

        lblPromedioServicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPromedioEspera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPromedioServicio.setEditable(false);
        txtPromedioEspera.setEditable(false);


        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPromedioEspera, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(txtPromedioServicio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPromedioServicio)
                    .addComponent(lblPromedioEspera))
                .addGap(406, 406, 406))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblPromedioServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPromedioEspera)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPromedioServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPromedioEspera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE))))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSJFActionPerformed(java.awt.event.ActionEvent evt) {
        List<ProcessObj> lista = new ArrayList<>();
        List<ProcessObj> listaCompletados = new ArrayList<>();
        DefaultTableModel mdl = (DefaultTableModel) tblListaProcesos.getModel();

        for (int i = 0; i < mdl.getRowCount(); i++) {

            int ID = (int) mdl.getValueAt(i, 0);
            String nombre = (String) mdl.getValueAt(i, 1);
            int instanteLlegada = (int) mdl.getValueAt(i, 2);
            int tiempoEspera = (int) mdl.getValueAt(i, 3);

            ProcessObj p1 = new ProcessObj(nombre,ID,instanteLlegada,tiempoEspera);

            lista.add(p1);
        }

        ShortestJobFirst sjf = new ShortestJobFirst();

        try {
            listaCompletados = sjf.allocateResources(lista);
        } catch (Exception e) {
            System.out.println("Hubo un problema");
        }

        DefaultTableModel mdlCompletados = (DefaultTableModel) tblListaCompletados.getModel();
        mdlCompletados.setRowCount(0);

        int totalTiempoEspera = 0;
        int totalTiempoServicio = 0;
        float promedioEspera, promedioServicio;
        
        for (int i = 0; i < listaCompletados.size(); i++) {
            ProcessObj p1 = listaCompletados.get(i);
            mdlCompletados.addRow(new Object[]{p1.getId(),p1.getNombre(),p1.getInstantellegada(),p1.getTiempoejecucion(),p1.getInstantefin(),p1.getTiempoespera(),p1.getTiemposervicio()});

            totalTiempoEspera = totalTiempoEspera + p1.getTiempoespera();
            totalTiempoServicio = totalTiempoServicio + p1.getTiemposervicio();
        }

        promedioEspera = (float) totalTiempoEspera/listaCompletados.size();
        float avgWaitRound = (float) (Math.round(promedioEspera * 100.0) / 100.0);
        
        promedioServicio = (float) totalTiempoServicio/listaCompletados.size();
        float avgTurnRound = (float) (Math.round(promedioServicio * 100.0) / 100.0);
        
        txtPromedioServicio.setText(String.valueOf(avgTurnRound));
        txtPromedioEspera.setText(String.valueOf(avgWaitRound));
    }

    private void btnFCFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fCFSActionPerformed
        List<ProcessObj> lista = new ArrayList<>();
        List<ProcessObj> listaCompletados = new ArrayList<>();
        DefaultTableModel mdl = (DefaultTableModel) tblListaProcesos.getModel();

        for (int i = 0; i < mdl.getRowCount(); i++) {
            int ID = (int) mdl.getValueAt(i, 0);
            String Nombre = (String) mdl.getValueAt(i, 1);
            int InstanteLlegada = (int) mdl.getValueAt(i, 2);
            int TiempoEspera = (int) mdl.getValueAt(i, 3);

            ProcessObj p1 = new ProcessObj(Nombre,ID,InstanteLlegada,TiempoEspera);
            lista.add(p1);
        }

        FirstComeFirstServe fcfs = new FirstComeFirstServe();

        try {
            listaCompletados = fcfs.allocateResources(lista);
        } catch (Exception e) {
            System.out.println("Hubo un problema");
        }

        DefaultTableModel mdlCompletados = (DefaultTableModel) tblListaCompletados.getModel();
        mdlCompletados.setRowCount(0);

        int totalTiempoEspera = 0;
        int totalTiempoServicio = 0;
        float promedioEspera, promedioServicio;

        for (int i = 0; i < listaCompletados.size(); i++) {
            ProcessObj p1 = listaCompletados.get(i);
            mdlCompletados.addRow(new Object[]{p1.getId(),p1.getNombre(),p1.getInstantellegada(),p1.getTiempoejecucion(),p1.getInstantefin(),p1.getTiempoespera(),p1.getTiemposervicio()});

            totalTiempoEspera = totalTiempoEspera + p1.getTiempoespera();
            totalTiempoServicio = totalTiempoServicio + p1.getTiemposervicio();
        }

        promedioEspera = (float) totalTiempoEspera/listaCompletados.size();
        float avgWaitRound = (float) (Math.round(promedioEspera * 100.0) / 100.0);

        promedioServicio = (float) totalTiempoServicio/listaCompletados.size();
        float avgTurnRound = (float) (Math.round(promedioServicio * 100.0) / 100.0);

        txtPromedioServicio.setText(String.valueOf(avgTurnRound));
        txtPromedioEspera.setText(String.valueOf(avgWaitRound));
    }

    private void btnrRoundRobinActionPerformed(java.awt.event.ActionEvent evt) {
        List<ProcessObj> lista = new ArrayList<>();
        List<ProcessObj> listaCompletados = new ArrayList<>();
        int tiempoQuantums = Integer.parseInt(this.txtQuantums.getText());
        DefaultTableModel mdl = (DefaultTableModel) tblListaProcesos.getModel();

        for (int i = 0; i < mdl.getRowCount(); i++) {
            int ID = (int) mdl.getValueAt(i, 0);
            String Nombre = (String) mdl.getValueAt(i, 1);
            int InstanteLlegada = (int) mdl.getValueAt(i, 2);
            int TiempoEspera = (int) mdl.getValueAt(i, 3);

            ProcessObj p1 = new ProcessObj(Nombre,ID,InstanteLlegada,TiempoEspera);
            ProcessObj p2 = new ProcessObj(Nombre,ID,InstanteLlegada,TiempoEspera);

            lista.add(p1);
            listaCompletados.add(p2);
        }

        RoundRobin r = new RoundRobin();

        try {
            listaCompletados = reiniciarEjecucion( r.allocateResources(lista, listaCompletados,tiempoQuantums)  );
        } catch (Exception e) {
            System.out.println("Hubo un problema");
        }

        DefaultTableModel mdlCompletados = (DefaultTableModel) tblListaCompletados.getModel();
        mdlCompletados.setRowCount(0);

        int totalTiempoEspera = 0;
        int totalTiempoServicio = 0;
        float promedioEspera, promedioServicio;

        for (int i = 0; i < listaCompletados.size(); i++) {
            ProcessObj p1 = listaCompletados.get(i);
            mdlCompletados.addRow(new Object[]{p1.getId(),p1.getNombre(),p1.getInstantellegada(),p1.getTiempoejecucion(),p1.getInstantefin(),p1.getTiempoespera(),p1.getTiemposervicio()});

            totalTiempoEspera = totalTiempoEspera + p1.getTiempoespera();
            totalTiempoServicio = totalTiempoServicio + p1.getTiemposervicio();
        }

        promedioEspera = (float) totalTiempoEspera/listaCompletados.size();
        float avgWaitRound = (float) (Math.round(promedioEspera * 100.0) / 100.0);

        promedioServicio = (float) totalTiempoServicio/listaCompletados.size();
        float avgTurnRound = (float) (Math.round(promedioServicio * 100.0) / 100.0);

        txtPromedioServicio.setText(String.valueOf(avgTurnRound));
        txtPromedioEspera.setText(String.valueOf(avgWaitRound));
    }



    private void btnCrearProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProcessActionPerformed
        int ID = Integer.parseInt(this.txtID.getText());
        String Nombre = this.txtNombre.getText();
        int InstanteLlegada = Integer.parseInt(this.txtInstanteLlegada.getText());
        int TiempoEspera = Integer.parseInt(this.txtTiempoEspera.getText());

        ProcessObj p1 = new ProcessObj(Nombre,ID,InstanteLlegada,TiempoEspera);

        DefaultTableModel mdl = (DefaultTableModel) tblListaProcesos.getModel();

        mdl.addRow(new Object[]{p1.getId(),p1.getNombre(),p1.getInstantellegada(),p1.getTiempoejecucion()});
    }

    private void btnLimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultTableModel mdl = (DefaultTableModel) tblListaProcesos.getModel();
        mdl.setRowCount(0);
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Starter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Starter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Starter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Starter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Starter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpiarTabla;
    private javax.swing.JButton btnCrearProceso;
    private javax.swing.JButton btnFCFS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPromedioServicio;
    private javax.swing.JLabel lblPromedioEspera;
    private javax.swing.JTextField txtInstanteLlegada;
    private javax.swing.JTextField txtTiempoEspera;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JButton btnRoundRobin;
    private javax.swing.JButton btnSJF;
    private javax.swing.JTextField txtQuantums;
    private javax.swing.JTable tblListaProcesos;
    private javax.swing.JTable tblListaCompletados;
    private javax.swing.JTextField txtPromedioServicio;
    private javax.swing.JTextField txtPromedioEspera;

    private List<ProcessObj> reiniciarEjecucion(List<ProcessObj> recive) {
        DefaultTableModel mdl = (DefaultTableModel) tblListaProcesos.getModel();
        List<ProcessObj> sendList = new ArrayList<>();

        for (int i = 0; i < mdl.getRowCount(); i++) {
            String nombre = (String) mdl.getValueAt(i, 1);
            int tiempoejecucion = (int) mdl.getValueAt(i, 3);
            
            for (ProcessObj recive1 : recive) {
                if (nombre.equals(recive1.getNombre())) {

                    recive1.setTiempoejecucion(tiempoejecucion);
                    recive1.setTiempoespera(recive1.getTiemposervicio() - tiempoejecucion);
                    sendList.add(recive1);

                }
            }
        }

        return sendList;
    }
}
